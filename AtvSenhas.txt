#include <iostream>
using namespace std;

struct No
{
	int dado;
	No *prox;
};

struct Fila
{
	No *ini;
	No *fim;
};

Fila *init()
{
	Fila *f = new Fila;
	f->ini = NULL;
	f->fim = NULL;
	return f;
}

int isEmpty(Fila *f)
{
	return (f->ini == NULL);
}

int count(Fila *f)
{
	int qtde = 0;
	No *no;
	no = f->ini;
	while (no != NULL)
	{
		qtde++;
		no = no->prox;
	}
	return qtde;
}

void print(Fila *f)
{
	No *no;
	no = f->ini;
	cout << "-------------" << endl;
	while (no != NULL)
	{
		cout << no->dado << endl;
		no = no->prox;
	}
	cout << "-------------" << endl;
}

void enqueue(Fila *f, float v)
{
	No *no = new No;
	no->dado = v;
	no->prox = NULL;
	if (isEmpty(f))
	{
		f->ini = no;
	}
	else
	{
		f->fim->prox = no;
	}
	f->fim = no;
}

int dequeue(Fila *f)
{
	int ret;
	if (isEmpty(f))
	{
		ret = -1;
	}
	else
	{
		No *no = f->ini;
		ret = no->dado;
		f->ini = no->prox;
		if (f->ini == NULL)
		{
			f->fim = NULL;
		}
		free(no);
	}
	return ret;
}

void freeFila(Fila *f)
{
	No *no = f->ini;
	while (no != NULL)
	{
		No *temp = no->prox;
		free(no);
		no = temp;
	}
	free(f);
}

int main(int argc, char **argv)
{
	Fila *senhasGeradas;
	Fila *senhasAtendidas;
	senhasGeradas = init();
	senhasAtendidas = init();
	int op;
	int ep = 1;
	int senha = 0;
	int senhaAtendida;

	while (ep != 0)
	{
		cout << "\nExercício das Filas" << endl;
		cout << "Senhas ainda aguardando atendimento: " << count(senhasGeradas) << endl;
		cout << "0. Sair" << endl;
		cout << "1. Gerar senha" << endl;
		cout << "2. Realizar atendimento" << endl;
		cout << "Selecione qual opção deseja:";
		cin >> op;
		switch (op)
		{
		case 0:
			if (isEmpty(senhasGeradas))
			{
				ep = 0;
				cout << "\nO número de senhas atendido foi de: " << count(senhasAtendidas) << endl;
				cout << "\nA fila está vazia, terminando programa..." << endl;
				break;
			}
			else
			{
				cout << "\nPor favor, esvazie a lista antes de terminar o programa!" << endl;
				break;
			}
		case 1:
			senha++;
			cout << "\nGerando Senha" << endl;
			enqueue(senhasGeradas, senha);
			break;
		case 2:
			if (isEmpty(senhasGeradas))
			{
				cout << "\nNão existem senhas aguardando atendimento!" << endl;
				break;
			}
			else
			{
				cout << "\nRealizando Atendimento" << endl;
				senhaAtendida = dequeue(senhasGeradas);
				enqueue(senhasAtendidas, senhaAtendida);
				cout << "\nSenha Atendida:" << senhaAtendida << endl;
				break;
			}

		default:
			cout << "\nSelecione uma opção válida." << endl;
			break;
		}
	}
}